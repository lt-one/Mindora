
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.7.0
 * Query Engine version: 3cff47a7f5d65c3ea74883f1d736e41d68ce91ed
 */
Prisma.prismaVersion = {
  client: "6.7.0",
  engine: "3cff47a7f5d65c3ea74883f1d736e41d68ce91ed"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  image: 'image',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  imageUrl: 'imageUrl',
  demoUrl: 'demoUrl',
  githubUrl: 'githubUrl',
  technologies: 'technologies',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.BlogPostScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  content: 'content',
  excerpt: 'excerpt',
  coverImage: 'coverImage',
  tags: 'tags',
  categories: 'categories',
  published: 'published',
  isFeatured: 'isFeatured',
  viewCount: 'viewCount',
  publishedAt: 'publishedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.TodoItemScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  completed: 'completed',
  priority: 'priority',
  dueDate: 'dueDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  categoryId: 'categoryId'
};

exports.Prisma.TodoCategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  color: 'color',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FinancialDataScalarFieldEnum = {
  id: 'id',
  date: 'date',
  value: 'value',
  source: 'source',
  category: 'category',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MarketTrendScalarFieldEnum = {
  id: 'id',
  date: 'date',
  trendName: 'trendName',
  trendValue: 'trendValue',
  description: 'description',
  source: 'source',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.IndustryMetricScalarFieldEnum = {
  id: 'id',
  date: 'date',
  industryName: 'industryName',
  metricName: 'metricName',
  metricValue: 'metricValue',
  source: 'source',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GoodSiteScalarFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  description: 'description',
  shortDesc: 'shortDesc',
  category: 'category',
  tags: 'tags',
  rating: 'rating',
  screenshots: 'screenshots',
  useCases: 'useCases',
  tips: 'tips',
  experience: 'experience',
  isFree: 'isFree',
  hasPremium: 'hasPremium',
  relatedSites: 'relatedSites',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive',
  viewCount: 'viewCount',
  featured: 'featured'
};

exports.Prisma.NoteCardScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  color: 'color',
  tags: 'tags',
  status: 'status',
  priority: 'priority',
  position: 'position',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  content: 'content',
  excerpt: 'excerpt',
  coverImage: 'coverImage',
  rating: 'rating',
  isPublished: 'isPublished',
  publishedAt: 'publishedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  viewCount: 'viewCount',
  likeCount: 'likeCount',
  categoryId: 'categoryId',
  workId: 'workId',
  isFeatured: 'isFeatured',
  spoilerWarning: 'spoilerWarning',
  userId: 'userId'
};

exports.Prisma.WorkScalarFieldEnum = {
  id: 'id',
  title: 'title',
  originalTitle: 'originalTitle',
  type: 'type',
  year: 'year',
  creator: 'creator',
  imageUrl: 'imageUrl',
  externalLink: 'externalLink',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description'
};

exports.Prisma.TagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  authorName: 'authorName',
  authorEmail: 'authorEmail',
  isApproved: 'isApproved',
  reviewId: 'reviewId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  parentId: 'parentId'
};

exports.Prisma.ContactScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  subject: 'subject',
  purpose: 'purpose',
  message: 'message',
  createdAt: 'createdAt',
  processed: 'processed',
  responseId: 'responseId',
  ipAddress: 'ipAddress',
  referrer: 'referrer',
  attachment: 'attachment',
  userId: 'userId'
};

exports.Prisma.ResponseScalarFieldEnum = {
  id: 'id',
  content: 'content',
  sentAt: 'sentAt'
};

exports.Prisma.SocialLinkScalarFieldEnum = {
  id: 'id',
  platform: 'platform',
  url: 'url',
  icon: 'icon',
  displayOrder: 'displayOrder',
  isActive: 'isActive'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  image: 'image'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.ProjectOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  imageUrl: 'imageUrl',
  demoUrl: 'demoUrl',
  githubUrl: 'githubUrl',
  userId: 'userId'
};

exports.Prisma.BlogPostOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  content: 'content',
  excerpt: 'excerpt',
  coverImage: 'coverImage',
  userId: 'userId'
};

exports.Prisma.TodoItemOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  priority: 'priority',
  userId: 'userId',
  categoryId: 'categoryId'
};

exports.Prisma.TodoCategoryOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  color: 'color'
};

exports.Prisma.FinancialDataOrderByRelevanceFieldEnum = {
  id: 'id',
  source: 'source',
  category: 'category'
};

exports.Prisma.MarketTrendOrderByRelevanceFieldEnum = {
  id: 'id',
  trendName: 'trendName',
  description: 'description',
  source: 'source'
};

exports.Prisma.IndustryMetricOrderByRelevanceFieldEnum = {
  id: 'id',
  industryName: 'industryName',
  metricName: 'metricName',
  source: 'source'
};

exports.Prisma.GoodSiteOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  url: 'url',
  description: 'description',
  shortDesc: 'shortDesc',
  category: 'category',
  tips: 'tips',
  experience: 'experience'
};

exports.Prisma.NoteCardOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  color: 'color',
  status: 'status',
  userId: 'userId'
};

exports.Prisma.ReviewOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  slug: 'slug',
  content: 'content',
  excerpt: 'excerpt',
  coverImage: 'coverImage',
  categoryId: 'categoryId',
  workId: 'workId',
  userId: 'userId'
};

exports.Prisma.WorkOrderByRelevanceFieldEnum = {
  id: 'id',
  title: 'title',
  originalTitle: 'originalTitle',
  type: 'type',
  creator: 'creator',
  imageUrl: 'imageUrl',
  externalLink: 'externalLink',
  description: 'description'
};

exports.Prisma.CategoryOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug',
  description: 'description'
};

exports.Prisma.TagOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  slug: 'slug'
};

exports.Prisma.CommentOrderByRelevanceFieldEnum = {
  id: 'id',
  content: 'content',
  authorName: 'authorName',
  authorEmail: 'authorEmail',
  reviewId: 'reviewId',
  parentId: 'parentId'
};

exports.Prisma.ContactOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  subject: 'subject',
  purpose: 'purpose',
  message: 'message',
  responseId: 'responseId',
  ipAddress: 'ipAddress',
  referrer: 'referrer',
  attachment: 'attachment',
  userId: 'userId'
};

exports.Prisma.ResponseOrderByRelevanceFieldEnum = {
  id: 'id',
  content: 'content'
};

exports.Prisma.SocialLinkOrderByRelevanceFieldEnum = {
  id: 'id',
  platform: 'platform',
  url: 'url',
  icon: 'icon'
};


exports.Prisma.ModelName = {
  User: 'User',
  Project: 'Project',
  BlogPost: 'BlogPost',
  TodoItem: 'TodoItem',
  TodoCategory: 'TodoCategory',
  FinancialData: 'FinancialData',
  MarketTrend: 'MarketTrend',
  IndustryMetric: 'IndustryMetric',
  GoodSite: 'GoodSite',
  NoteCard: 'NoteCard',
  Review: 'Review',
  Work: 'Work',
  Category: 'Category',
  Tag: 'Tag',
  Comment: 'Comment',
  Contact: 'Contact',
  Response: 'Response',
  SocialLink: 'SocialLink'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
